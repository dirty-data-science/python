{"version":3,"file":"1310.23bbe67.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@lumino/domutils/src/clipboard.ts","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@lumino/domutils/src/element.ts","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@lumino/domutils/src/platform.ts","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@lumino/domutils/src/selector.ts"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2019, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for clipboard related functionality.\n */\nexport namespace ClipboardExt {\n  /**\n   * Copy text to the system clipboard.\n   *\n   * @param text - The text to copy to the clipboard.\n   */\n  export function copyText(text: string): void {\n    // Fetch the document body.\n    const body = document.body;\n\n    // Set up the clipboard event listener.\n    const handler = (event: ClipboardEvent) => {\n      // Stop the event propagation.\n      event.preventDefault();\n      event.stopPropagation();\n\n      // Set the clipboard data.\n      event.clipboardData!.setData('text', text);\n\n      // Remove the event listener.\n      body.removeEventListener('copy', handler, true);\n    };\n\n    // Add the event listener.\n    body.addEventListener('copy', handler, true);\n\n    // Trigger the event.\n    document.execCommand('copy');\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for element related utilities.\n */\nexport namespace ElementExt {\n  /**\n   * An object which holds the border and padding data for an element.\n   */\n  export interface IBoxSizing {\n    /**\n     * The top border width, in pixels.\n     */\n    borderTop: number;\n\n    /**\n     * The left border width, in pixels.\n     */\n    borderLeft: number;\n\n    /**\n     * The right border width, in pixels.\n     */\n    borderRight: number;\n\n    /**\n     * The bottom border width, in pixels.\n     */\n    borderBottom: number;\n\n    /**\n     * The top padding width, in pixels.\n     */\n    paddingTop: number;\n\n    /**\n     * The left padding width, in pixels.\n     */\n    paddingLeft: number;\n\n    /**\n     * The right padding width, in pixels.\n     */\n    paddingRight: number;\n\n    /**\n     * The bottom padding width, in pixels.\n     */\n    paddingBottom: number;\n\n    /**\n     * The sum of horizontal border and padding.\n     */\n    horizontalSum: number;\n\n    /**\n     * The sum of vertical border and padding.\n     */\n    verticalSum: number;\n  }\n\n  /**\n   * Compute the box sizing for an element.\n   *\n   * @param element - The element of interest.\n   *\n   * @returns The box sizing data for the specified element.\n   */\n  export function boxSizing(element: Element): IBoxSizing {\n    let style = window.getComputedStyle(element);\n    let bt = parseFloat(style.borderTopWidth!) || 0;\n    let bl = parseFloat(style.borderLeftWidth!) || 0;\n    let br = parseFloat(style.borderRightWidth!) || 0;\n    let bb = parseFloat(style.borderBottomWidth!) || 0;\n    let pt = parseFloat(style.paddingTop!) || 0;\n    let pl = parseFloat(style.paddingLeft!) || 0;\n    let pr = parseFloat(style.paddingRight!) || 0;\n    let pb = parseFloat(style.paddingBottom!) || 0;\n    let hs = bl + pl + pr + br;\n    let vs = bt + pt + pb + bb;\n    return {\n      borderTop: bt,\n      borderLeft: bl,\n      borderRight: br,\n      borderBottom: bb,\n      paddingTop: pt,\n      paddingLeft: pl,\n      paddingRight: pr,\n      paddingBottom: pb,\n      horizontalSum: hs,\n      verticalSum: vs\n    };\n  }\n\n  /**\n   * An object which holds the min and max size data for an element.\n   */\n  export interface ISizeLimits {\n    /**\n     * The minimum width, in pixels.\n     */\n    minWidth: number;\n\n    /**\n     * The minimum height, in pixels.\n     */\n    minHeight: number;\n\n    /**\n     * The maximum width, in pixels.\n     */\n    maxWidth: number;\n\n    /**\n     * The maximum height, in pixels.\n     */\n    maxHeight: number;\n  }\n\n  /**\n   * Compute the size limits for an element.\n   *\n   * @param element - The element of interest.\n   *\n   * @returns The size limit data for the specified element.\n   */\n  export function sizeLimits(element: Element): ISizeLimits {\n    let style = window.getComputedStyle(element);\n    let minWidth = parseFloat(style.minWidth!) || 0;\n    let minHeight = parseFloat(style.minHeight!) || 0;\n    let maxWidth = parseFloat(style.maxWidth!) || Infinity;\n    let maxHeight = parseFloat(style.maxHeight!) || Infinity;\n    maxWidth = Math.max(minWidth, maxWidth);\n    maxHeight = Math.max(minHeight, maxHeight);\n    return { minWidth, minHeight, maxWidth, maxHeight };\n  }\n\n  /**\n   * Test whether a client position lies within an element.\n   *\n   * @param element - The DOM element of interest.\n   *\n   * @param clientX - The client X coordinate of interest.\n   *\n   * @param clientY - The client Y coordinate of interest.\n   *\n   * @returns Whether the point is within the given element.\n   */\n  export function hitTest(\n    element: Element,\n    clientX: number,\n    clientY: number\n  ): boolean {\n    let rect = element.getBoundingClientRect();\n    return (\n      clientX >= rect.left &&\n      clientX < rect.right &&\n      clientY >= rect.top &&\n      clientY < rect.bottom\n    );\n  }\n\n  /**\n   * Vertically scroll an element into view if needed.\n   *\n   * @param area - The scroll area element.\n   *\n   * @param element - The element of interest.\n   *\n   * #### Notes\n   * This follows the \"nearest\" behavior of the native `scrollIntoView`\n   * method, which is not supported by all browsers.\n   * https://drafts.csswg.org/cssom-view/#element-scrolling-members\n   *\n   * If the element fully covers the visible area or is fully contained\n   * within the visible area, no scrolling will take place. Otherwise,\n   * the nearest edges of the area and element are aligned.\n   */\n  export function scrollIntoViewIfNeeded(\n    area: Element,\n    element: Element\n  ): void {\n    let ar = area.getBoundingClientRect();\n    let er = element.getBoundingClientRect();\n    if (er.top <= ar.top && er.bottom >= ar.bottom) {\n      return;\n    }\n    if (er.top < ar.top && er.height <= ar.height) {\n      area.scrollTop -= ar.top - er.top;\n      return;\n    }\n    if (er.bottom > ar.bottom && er.height >= ar.height) {\n      area.scrollTop -= ar.top - er.top;\n      return;\n    }\n    if (er.top < ar.top && er.height > ar.height) {\n      area.scrollTop -= ar.bottom - er.bottom;\n      return;\n    }\n    if (er.bottom > ar.bottom && er.height < ar.height) {\n      area.scrollTop -= ar.bottom - er.bottom;\n      return;\n    }\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for platform related utilities.\n */\nexport namespace Platform {\n  /**\n   * A flag indicating whether the platform is Mac.\n   */\n  export const IS_MAC = !!navigator.platform.match(/Mac/i);\n\n  /**\n   * A flag indicating whether the platform is Windows.\n   */\n  export const IS_WIN = !!navigator.platform.match(/Win/i);\n\n  /**\n   * A flag indicating whether the browser is IE.\n   */\n  export const IS_IE = /Trident/.test(navigator.userAgent);\n\n  /**\n   * A flag indicating whether the browser is Edge.\n   */\n  export const IS_EDGE = /Edge/.test(navigator.userAgent);\n\n  /**\n   * Test whether the `accel` key is pressed.\n   *\n   * @param event - The keyboard or mouse event of interest.\n   *\n   * @returns Whether the `accel` key is pressed.\n   *\n   * #### Notes\n   * On Mac the `accel` key is the command key. On all other\n   * platforms the `accel` key is the control key.\n   */\n  export function accelKey(event: KeyboardEvent | MouseEvent): boolean {\n    return IS_MAC ? event.metaKey : event.ctrlKey;\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for selector related utilities.\n */\nexport namespace Selector {\n  /**\n   * Calculate the specificity of a single CSS selector.\n   *\n   * @param selector - The CSS selector of interest.\n   *\n   * @returns The specificity of the selector.\n   *\n   * #### Undefined Behavior\n   * The selector is invalid.\n   *\n   * #### Notes\n   * This is based on https://www.w3.org/TR/css3-selectors/#specificity\n   *\n   * A larger number represents a more specific selector.\n   *\n   * The smallest possible specificity is `0`.\n   *\n   * The result is represented as a hex number `0x<aa><bb><cc>` where\n   * each component is the count of the respective selector clause.\n   *\n   * If the selector contains commas, only the first clause is used.\n   *\n   * The computed result is cached, so subsequent calculations for the\n   * same selector are extremely fast.\n   */\n  export function calculateSpecificity(selector: string): number {\n    if (selector in Private.specificityCache) {\n      return Private.specificityCache[selector];\n    }\n    let result = Private.calculateSingle(selector);\n    return (Private.specificityCache[selector] = result);\n  }\n\n  /**\n   * Test whether a selector is a valid CSS selector.\n   *\n   * @param selector - The CSS selector of interest.\n   *\n   * @returns `true` if the selector is valid, `false` otherwise.\n   *\n   * #### Notes\n   * The computed result is cached, so subsequent tests for the same\n   * selector are extremely fast.\n   */\n  export function isValid(selector: string): boolean {\n    if (selector in Private.validityCache) {\n      return Private.validityCache[selector];\n    }\n    let result = true;\n    try {\n      Private.testElem.querySelector(selector);\n    } catch (err) {\n      result = false;\n    }\n    return (Private.validityCache[selector] = result);\n  }\n\n  /**\n   * Test whether an element matches a CSS selector.\n   *\n   * @param element - The element of interest.\n   *\n   * @param selector - The valid CSS selector of interest.\n   *\n   * @returns `true` if the element is a match, `false` otherwise.\n   *\n   * #### Notes\n   * This function uses the builtin browser capabilities when possible,\n   * falling back onto a document query otherwise.\n   */\n  export function matches(element: Element, selector: string): boolean {\n    return Private.protoMatchFunc.call(element, selector);\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * A type alias for an object hash.\n   */\n  export type StringMap<T> = { [key: string]: T };\n\n  /**\n   * A cache of computed selector specificity values.\n   */\n  export const specificityCache: StringMap<number> = Object.create(null);\n\n  /**\n   * A cache of computed selector validity.\n   */\n  export const validityCache: StringMap<boolean> = Object.create(null);\n\n  /**\n   * An empty element for testing selector validity.\n   */\n  export const testElem = document.createElement('div');\n\n  /**\n   * A cross-browser CSS selector matching prototype function.\n   */\n  export const protoMatchFunc: Function = (() => {\n    let proto = Element.prototype as any;\n    return (\n      proto.matches ||\n      proto.matchesSelector ||\n      proto.mozMatchesSelector ||\n      proto.msMatchesSelector ||\n      proto.oMatchesSelector ||\n      proto.webkitMatchesSelector ||\n      function (selector: string) {\n        let elem = this as Element;\n        let matches = elem.ownerDocument\n          ? elem.ownerDocument.querySelectorAll(selector)\n          : [];\n        return Array.prototype.indexOf.call(matches, elem) !== -1;\n      }\n    );\n  })();\n\n  /**\n   * Calculate the specificity of a single selector.\n   *\n   * The behavior is undefined if the selector is invalid.\n   */\n  export function calculateSingle(selector: string): number {\n    // Ignore anything after the first comma.\n    selector = selector.split(',', 1)[0];\n\n    // Setup the aggregate counters.\n    let a = 0;\n    let b = 0;\n    let c = 0;\n\n    // Apply a regex to the front of the selector. If it succeeds, that\n    // portion of the selector is removed. Returns a success/fail flag.\n    function match(re: RegExp): boolean {\n      let match = selector.match(re);\n      if (match === null) {\n        return false;\n      }\n      selector = selector.slice(match[0].length);\n      return true;\n    }\n\n    // Replace the negation pseudo-class (which is ignored),\n    // but keep its inner content (which is not ignored).\n    selector = selector.replace(NEGATION_RE, ' $1 ');\n\n    // Continue matching until the selector is consumed.\n    while (selector.length > 0) {\n      // Match an ID selector.\n      if (match(ID_RE)) {\n        a++;\n        continue;\n      }\n\n      // Match a class selector.\n      if (match(CLASS_RE)) {\n        b++;\n        continue;\n      }\n\n      // Match an attribute selector.\n      if (match(ATTR_RE)) {\n        b++;\n        continue;\n      }\n\n      // Match a pseudo-element selector. This is done before matching\n      // a pseudo-class since this regex overlaps with that regex.\n      if (match(PSEUDO_ELEM_RE)) {\n        c++;\n        continue;\n      }\n\n      // Match a pseudo-class selector.\n      if (match(PSEDUO_CLASS_RE)) {\n        b++;\n        continue;\n      }\n\n      // Match a plain type selector.\n      if (match(TYPE_RE)) {\n        c++;\n        continue;\n      }\n\n      // Finally, match any ignored characters.\n      if (match(IGNORE_RE)) {\n        continue;\n      }\n\n      // At this point, the selector is assumed to be invalid.\n      return 0;\n    }\n\n    // Clamp each component to a reasonable base.\n    a = Math.min(a, 0xff);\n    b = Math.min(b, 0xff);\n    c = Math.min(c, 0xff);\n\n    // Combine the components into a single result.\n    return (a << 16) | (b << 8) | c;\n  }\n\n  /**\n   * A regex which matches an ID selector at string start.\n   */\n  const ID_RE = /^#[^\\s\\+>~#\\.\\[:]+/;\n\n  /**\n   * A regex which matches a class selector at string start.\n   */\n  const CLASS_RE = /^\\.[^\\s\\+>~#\\.\\[:]+/;\n\n  /**\n   * A regex which matches an attribute selector at string start.\n   */\n  const ATTR_RE = /^\\[[^\\]]+\\]/;\n\n  /**\n   * A regex which matches a type selector at string start.\n   */\n  const TYPE_RE = /^[^\\s\\+>~#\\.\\[:]+/;\n\n  /**\n   * A regex which matches a pseudo-element selector at string start.\n   */\n  const PSEUDO_ELEM_RE = /^(::[^\\s\\+>~#\\.\\[:]+|:first-line|:first-letter|:before|:after)/;\n\n  /**\n   * A regex which matches a pseudo-class selector at string start.\n   */\n  const PSEDUO_CLASS_RE = /^:[^\\s\\+>~#\\.\\[:]+/;\n\n  /**\n   * A regex which matches ignored characters at string start.\n   */\n  const IGNORE_RE = /^[\\s\\+>~\\*]+/;\n\n  /**\n   * A regex which matches the negation pseudo-class globally.\n   */\n  const NEGATION_RE = /:not\\(([^\\)]+)\\)/g;\n}\n"],"names":["ClipboardExt","ElementExt","Platform","Selector","Private","copyText","text","body","document","handler","event","preventDefault","stopPropagation","clipboardData","setData","removeEventListener","addEventListener","execCommand","boxSizing","element","style","window","getComputedStyle","bt","parseFloat","borderTopWidth","bl","borderLeftWidth","br","borderRightWidth","bb","borderBottomWidth","pt","paddingTop","pl","paddingLeft","pr","paddingRight","pb","paddingBottom","borderTop","borderLeft","borderRight","borderBottom","horizontalSum","verticalSum","sizeLimits","minWidth","minHeight","maxWidth","Infinity","maxHeight","Math","max","hitTest","clientX","clientY","rect","getBoundingClientRect","left","right","top","bottom","scrollIntoViewIfNeeded","area","ar","er","height","scrollTop","IS_MAC","navigator","platform","match","IS_WIN","IS_IE","test","userAgent","IS_EDGE","accelKey","metaKey","ctrlKey","calculateSpecificity","selector","specificityCache","result","calculateSingle","isValid","validityCache","testElem","querySelector","err","matches","protoMatchFunc","call","proto","Object","create","createElement","Element","prototype","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","elem","this","ownerDocument","querySelectorAll","Array","indexOf","a","b","c","re","slice","length","split","replace","NEGATION_RE","ID_RE","CLASS_RE","ATTR_RE","PSEUDO_ELEM_RE","PSEDUO_CLASS_RE","TYPE_RE","IGNORE_RE","min"],"sourceRoot":""}